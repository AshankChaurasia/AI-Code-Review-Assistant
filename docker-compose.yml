version: "3.8"

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      # These are injected from the repository .env (docker-compose loads .env by default)
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-AI_Code_Review_Assistant}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-AI_Code_Review_Assistant} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    # Use explicit uvicorn command to run the FastAPI app from backend/app/main.py
    command: ["uvicorn", "main:app", "--app-dir", "backend/app", "--host", "0.0.0.0", "--port", "8000"]
    working_dir: /app/backend/app
    volumes:
      - .:/app
    healthcheck:
      # hits the OpenAPI docs page to confirm app ready; adjust if you provide a dedicated /health endpoint
      test: ["CMD-SHELL", "curl -f http://localhost:8000/docs || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend
    ports:
      - "7860:7860"
    command: ["python", "frontend/app.py"]
    working_dir: /app
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7860/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: